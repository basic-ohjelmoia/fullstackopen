{"version":3,"sources":["components/Person.js","services/numbers.js","App.js","serviceWorker.js","index.js"],"names":["Person","_ref","person","selectForRemoval","react_default","a","createElement","name","number","onClick","baseUrl","numbers","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","concat","remove","delObject","console","log","delete","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleNameChange","event","target","value","setState","newName","handleNumberChange","newNumber","handleFilterChange","filter","addName","preventDefault","nameObject","state","included","persons","map","x","includes","numberService","newPerson","message","setTimeout","personToRemove","find","n","window","confirm","removeable","_this2","_this3","namesToShow","length","toString","toLowerCase","className","onChange","onSubmit","type","i","components_Person","key","React","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.98b01c78.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Person = ({ person,selectForRemoval }) => {\r\n\r\n    const label = 'Remove'\r\n\r\n    return (\r\n      \r\n     <tr><td>{person.name}</td><td>{person.number} <button onClick={selectForRemoval}>{label}</button></td></tr>    )\r\n  }\r\n\r\n  export default Person","import axios from 'axios'\r\nconst baseUrl = '/api/people'\r\n\r\n\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n   return request.then(response => { return response.data })\r\n//   const nonExisting = {\r\n//     id: 10000,\r\n//     name: 'T채t채 muistiinpanoa ei ole palvelimelta',\r\n//     number: '12345'\r\n//   }\r\n//   return request.then(response => response.data.concat(nonExisting))\r\n}\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id, delObject) => {\r\n    console.log(id,delObject)\r\n    const request = axios.delete(`${baseUrl}/${id}`, delObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\nexport default { getAll, create, update , remove }","import React from 'react';\nimport axios from 'axios'\nimport Numbers from './components/Numbers'\nimport Person from './components/Person'\nimport numberService from './services/numbers'\nimport './App.css'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      persons: [],\n      // removeable: '',\n      newName: '',\n      newNumber: '',\n      filter: '',\n      message: null\n    }\n  }\n\n  // componentDidMount() {\n  //   axios\n  //   .get('http://localhost:3001/persons')\n  //   .then(response => {\n  //     console.log('promise fulfilled')\n  //     this.setState({ persons: response.data })\n  //   })\n  // }\n\n  componentWillMount() {\n    numberService\n      .getAll()\n      .then(persons => {\n        this.setState({ persons })\n      })\n  }\n\n  handleNameChange = (event) => {\n    console.log(event.target.value)\n    this.setState({ newName: event.target.value })\n  }\n\n  handleNumberChange = (event) => {\n    console.log(event.target.value)\n    this.setState({ newNumber: event.target.value })\n  }\n\n  handleFilterChange = (event) => {\n    console.log(event.target.value)\n    this.setState({ filter: event.target.value })\n  }\n\n\n  \n\n  addName = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: this.state.newName,\n      number: this.state.newNumber\n    }\n\n    const included = this.state.persons.map((x) => x.name).includes(nameObject.name)\n     console.log(included)\n\n     const persons = included ? this.state.persons : this.state.persons.concat(nameObject)\n\nconsole.log('name obj',nameObject)\n\n     numberService\n      .create(nameObject)\n      .then(newPerson => {\n        this.setState({\n          message: 'Luotiin '+newPerson.name+'!',\n          persons: this.state.persons.concat(newPerson),\n          newName: '',\n          newNumber: ''\n        })\n      })\n      setTimeout(() => {this.setState({message: null})\n    },3000)\n    }\n \n\n\n  selectForRemoval = (id) => {\n\n\n    return () => {\n      const personToRemove = this.state.persons.find(n => n.id === id)\n\n      if (window.confirm('Poistetaanko '+this.state.persons.find(n => n.id === id).name+'?')) {\n\n      numberService\n      .remove(id,personToRemove)\n      .then(personToRemove => {\n\n  console.log(personToRemove)\nconsole.log('invidual id: ',id)\n  console.log(this.state.persons)\n          this.setState({\n            message: 'Poistettiin '+this.state.persons.filter(n => n.id === id)[0].name+'!',\n            persons: this.state.persons.filter(n => n.id !== id) ,\n            removeable:'',\n            newName: '',\n            newNumber: ''\n          })\n          setTimeout(() => {this.setState({message: null})\n        },3000)\n\n      })\n    } else {\n      this.setState({\n        message: ''+this.state.persons.filter(n => n.id === id)[0].name+' j채tettiin puhelinluetteloon!',\n      })\n      setTimeout(() => {this.setState({message: null})\n        },3000)\n    }\n  }\n  }\n\n  render() {\n\n    const namesToShow =\n    this.state.filter.length<1 ?\n      this.state.persons :\n      this.state.persons.filter(person => person.name.toString().toLowerCase().includes(this.state.filter.toString().toLowerCase()))\n\n      const Notification = () => {\n        if (this.state.message === null) {\n          return null\n        }\n        return (\n          <div className=\"error\">\n            {this.state.message }\n          </div>\n        )\n      }\n\n    return (\n      <div>\n        <h2>Puhelinluettelo</h2>\n<Notification/>\n                <div>\n            rajaa n채ytett채v채: <input\n              value={this.state.filter}\n              onChange={this.handleFilterChange} />\n          </div>\n\n            <h2>Lis채채 uusi</h2>\n        <form onSubmit={this.addName}>\n          <div>\n            nimi: <input\n              value={this.state.newName}\n              onChange={this.handleNameChange} />\n          </div>\n          <div>\n            numero: <input\n              value={this.state.newNumber}\n              onChange={this.handleNumberChange} />\n          </div>\n          <div>\n            <button type=\"submit\">lis채채</button>\n          </div>\n        </form>\n\n<h2>Numerot</h2>\n        <table>\n          <tbody>\n        {/* {namesToShow.map((person) => <tr key={person.id}><td>{person.name}</td><td>{person.number}</td></tr>)} */}\n        {namesToShow.map((person,i) => <Person key={i} person={person} selectForRemoval={this.selectForRemoval(person.id)}/>)}\n      \n\n       </tbody>\n        </table>\n\n  {/* <Numbers namesToShow={namesToShow} selectForRemoval={this.selectForRemoval()}/> */}\n        <hr/>\n       \n        <div>\n          debug: {this.state.newName}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}